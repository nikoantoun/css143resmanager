#BlueJ class context
comment0.target=ReservableItem
comment0.text=\n\ Abstract\ class\ ReservableItem\ is\ the\ structure\ to\ get\ the\ fitness\ value\n\ and\ is\ the\ main\ class\ that\ holds\ the\ reservation\ schedules.\ The\ ten\ time\n\ slots\ are\ represented\ in\ the\ timeSchedule\ array.\ Any\ spot\ in\ the\ array\ that\n\ is\ null\ indicates\ that\ there\ is\ an\ open\ slot\ at\ the\ specific\ time\ (index).\n
comment1.params=fileIn
comment1.target=ReservableItem(java.util.Scanner)
comment1.text=\n\ Reads\ the\ next\ item\ in\ file\ and\ stores\ item\ in\ String.\ If\ the\ String\ \n\ has\ a\ number\ after\ (should\ be\ a\ table\ reservation),\ captures\ the\ number\n\ for\ the\ table\ in\ an\ int\ variable.\n\ @param\ fileIn\ is\ the\ Scanner\ object\ that\ will\ be\ passed\ in.\n
comment2.params=
comment2.target=java.lang.String\ getId()
comment2.text=\n\ Method\ gets\ the\ item's\ name\ and\ returns\ it.\n\ @return\ String\ item\n
comment3.params=index\ resBook
comment3.target=void\ add(int,\ Reservation)
comment3.text=\n\ Helper\ method\ to\ add\ reservations\ into\ Array\ in\ ResManager\n
comment4.params=index
comment4.target=boolean\ isAvailable(int)
comment4.text=\n\ \n
comment5.params=res
comment5.target=int\ getFitnessValue(Reservation)
comment5.text=\n\ Abstract\ method\ to\ return\ a\ number\ between\ 0\ and\ 100\ based\ on\ the\n\ fitness\ value.\n\ @return\ from\ 0\ if\ not\ at\ all\ to\ 100\ if\ best\ fit\n
comment6.params=
comment6.target=Reservation[]\ getReservations()
comment6.text=\n\ Method\ to\ return\ an\ array\ of\ current\ reservations\ made\n\ @return\ reservation\ array\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\n\ toString\ method\ to\ print\ out\ the\ item\ properly\n\ @return\ resId\ instance\ var.\n
numComments=8
